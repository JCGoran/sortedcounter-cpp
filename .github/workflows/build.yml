name: Build wheels for all platforms

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      branch:
        description: 'Release branch/commit'
        default: 'release/x.y'
        required: true
      version:
        description: 'The version of SortedCounter to release'
        default: 'x.y.z'
        required: true
      upload:
        description: 'Whether to upload to PyPI or not'
        default: 'false'
        required: false
        type: 'boolean'

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]

    steps:
      - name: Check out code
        if: github.event_name != 'workflow_dispatch'
        uses: actions/checkout@v4

      - name: Check out code for release
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.inputs.branch }}

      # Used to host cibuildwheel
      - name: Setup Python
        uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.5

      # if we're not doing a release version (manual!), only build one python version
      - name: Setup versions
        if: ${{ ! (github.event_name == 'workflow_dispatch' && github.event.inputs.version) && runner.os != 'Windows' }}
        run: |
          echo "CIBW_BUILD=cp311-*" >> "$GITHUB_ENV"
          # pretend version so setuptools doesn't fail
          echo "SETUPTOOLS_SCM_PRETEND_VERSION=0.1.0" >> "$GITHUB_ENV"

      - name: Setup versions (Windows)
        if: ${{ ! (github.event_name == 'workflow_dispatch' && github.event.inputs.version) && runner.os == 'Windows' }}
        run: |
          echo "CIBW_BUILD=cp311-*" >> "$env:GITHUB_ENV"
          # pretend version so setuptools doesn't fail
          echo "SETUPTOOLS_SCM_PRETEND_VERSION=0.1.0" >> "$env:GITHUB_ENV"

      - name: SCM
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.version && runner.os != 'Windows'
        run: echo "SETUPTOOLS_SCM_PRETEND_VERSION=${{ github.event.inputs.version }}" >> "$GITHUB_ENV"

      - name: SCM (Windows)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.version && runner.os == 'Windows'
        run: echo "SETUPTOOLS_SCM_PRETEND_VERSION=${{ github.event.inputs.version }}" >> "$env:GITHUB_ENV"

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ENVIRONMENT_PASS_LINUX: 'SETUPTOOLS_SCM_PRETEND_VERSION'

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl


  pypi-publish:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.upload == 'true'
    needs:
      - build_wheels

    name: Upload release to PyPI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os-name: [ubuntu-latest, macos-13, macos-14, windows-latest]

    environment:
      name: pypi
      url: https://pypi.org/p/SortedCounterCPP

    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:

    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os-name }}
        path: wheelhouse/

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: wheelhouse/
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
